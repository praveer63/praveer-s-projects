ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;

-- Droppping the table if it exists
drop table nyc_yellow_taxi; 
create external table if not exists nyc_yellow_taxi ( 
        vendorid int ,
        tpep_pickup_datetime string,
        tpep_dropoff_datetime string,
        passenger_count int,
        trip_distance double,
        ratecodeid int,
        store_and_fwd_flag string ,
        pulocationid int,
        dolocationid int,
        payment_type int,
        fare_amount double,
        extra double,
        mta_tax double,     
        tip_amount double,
        tolls_amount double,
        improvement_surcharge double,
        total_amount double ) ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
STORED AS TEXTFILE
location '/common_folder/nyc_taxi_data/'
tblproperties ("skip.header.line.count"="2");

-- Running the query to check all of the records 
select * from nyc_yellow_taxi;

-- Checking total number of rows; 
select count(*) from nyc_yellow_taxi;
-- 1174568 rows totally

-- 1. Basic Data Quality Checks :
----------------------------------

-- a. Checking the records to see if each TPEP has been provided  :
select count(*) as N_Records , vendorid as TPEP_Provider from nyc_yellow_taxi 
group by vendorid; 

-- The above output shows that the TPEP providers have following records:
-- TPEP_Provider(vendorid)	count
--		1	        527386
--		2	        647183

-- b. Checking if the file contains the records having pickup month and year other than 2017 & (Nov, Dec) respectively
select count(*) as number_of_record from nyc_yellow_taxi 
where substr(tpep_pickup_datetime, 1, 7) not in('2017-11','2017-12');

--14 records are present containing pick month and year not equal to (November, December) and 2017 respectively.

-- c. Checking each column one by one for any inconsistencies in data

-- Checking tpep_pickup_datetime for presence of NULL values
select count(*) from nyc_yellow_taxi where tpep_pickup_datetime is null;
-- No such null value

-- Checking tpep_dropoff_datetime for presence of NULL values
select count(*) from nyc_yellow_taxi where tpep_dropoff_datetime is null;
-- No such null value

-- Checking passenger_count for pickup month and year as (Nov, Dec) and 2017 respectively
select passenger_count, count(*) from nyc_yellow_taxi 
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') group by passenger_count;
-- We can see the unusual passenger_count which is equal to 0 for vendor id 1 and 2

-- Checking to see if the passenger_count has null value for pickup month and year as (Nov, Dec) and 2017 respectively
select count(*) from nyc_yellow_taxi 
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and passenger_count is null;
-- No such Null Value

-- Checking to see if the trip distance has zero or negative value for pickup month and year as (Nov, Dec) and 2017 respectively
select count(*) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and (trip_distance = 0 or trip_distance < 0);
-- 7401 total rows

-- Checking to see if the trip distance has NULL value for pickup month and year as (Nov, Dec) and 2017 respectively
select count(*) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and trip_distance is null;
-- No such NULL Value

-- Checking RateCodeID for pickup month and year as (Nov, Dec) and 2017 respectively
select RateCodeID, count(*) from nyc_yellow_taxi 
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') group by RateCodeID;
-- We can see that ratecodeid 99 also exists and it is not a valid one

-- Checking store_and_fwd_flag for pickup month and year as (Nov, Dec) and 2017 respectively
select store_and_fwd_flag, count(*) from nyc_yellow_taxi 
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') group by store_and_fwd_flag;
-- There are no issues in this column

-- Checking PULocationID for NULL values for pickup month and year as (Nov, Dec) and 2017 respectively
select count(*) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and PULocationID is null;
-- No NULL Value

-- Checking DOLocationID for NULL values for pickup month and year as (Nov, Dec) and 2017 respectively
select count(*) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and DOLocationID is null;
-- No NULL Value

-- Checking payment_type for pickup month and year as (Nov, Dec) and 2017 respectively
select payment_type, count(*) from nyc_yellow_taxi 
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') group by payment_type;
-- There are no issues in this column

-- Checking to see if the fare_amount column has negative or zero amount for pickup month and year as (Nov, Dec) and 2017 respectively
select count(*) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and fare_amount <= 0;
--870 total rows

-- Checking from which vendor these erroneous rows are coming
select distinct(vendorid) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and fare_amount <= 0;
--From Both the Vendors

-- Checking to see if the extra column has negative values for pickup month and year as (Nov, Dec) and 2017 respectively
select count(*) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and extra < 0;
-- 286 total rows

-- Checking to see from which vendor these erroneous rows are coming
select distinct(vendorid) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and extra < 0;
--From Both the Vendor

-- Checking if the mta_tax column has other than 0 or 0.5 value for pickup month and year as (Nov, Dec) and 2017 respectively
select count(*) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and mta_tax not in (0.5, 0);
-- 548 total rows

-- Checking to see from which vendor these erroneous rows are coming
select distinct(vendorid) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and mta_tax not in (0.5, 0);
--From Both the Vendors

-- Checking to see if the tip_amount column has negative value for pickup month and year as (Nov, Dec) and 2017 respectively
select count(*) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and tip_amount < 0;
-- 4 total rows have negative values

-- Checking to see from which vendor these erroneous rows are coming
select distinct(vendorid) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and tip_amount < 0;
--From the Second Vendor i.e. VeriFone Inc.

-- Checking if the tolls_amount column has negative values for pickup month and year as (Nov, Dec) and 2017 respectively
select count(*) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and tolls_amount < 0;
-- 3 total rows have negative vaues

-- Checking to see from which vendor these erroneous rows are coming
select distinct(vendorid) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and tolls_amount < 0;
--From Second Vendor i.e. VeriFone Inc.

-- Checking if the improvement_surcharge column has value other than 0.30 for pickup month and year as (Nov, Dec) and 2017 respectively
select count(*) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and improvement_surcharge != 0.30;
-- 849 total rows

-- Checking from which vendor these erroneous rows are coming
select distinct(vendorid) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and improvement_surcharge != 0.30;
--From both the vendors

-- Checking if the total_amount column has a negative or zero value for pickup month and year as (Nov, Dec) and 2017 respectively
select count(*) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and total_amount <= 0;
-- 681 total rows have these values

-- Checking to see from which vendor these erroneous rows are appearing
select distinct(vendorid) from nyc_yellow_taxi
where substr(tpep_pickup_datetime, 1, 7) in('2017-11','2017-12') and total_amount <= 0;
--From both the vendors

------------------------------------------
-- Following Assumption we are making before creating ORC Partitioned Table
-- 1. In passenger_count column, we assume that  0 passengers can not be there in one trip, so we remove such rows
-- 2. In trip_distance column we assume that trip distance can not be zero or negative, so we remove such rows
-- 3. RateCodeID column contains the value 99 which is not valid according to data dictionary, we remove such rows
---4. In fare_amount column we are assuming that no value should have negative or zero value, we remove such rows
---5. In Extra Column, we assume that that there should be no negative values, we remove such rows
---6. In mta_tax Column, we assume that there should not be any value other than 0 or 0.5, we remove such rows
---7. In tip_amount Column, we assume that there should be no negative values, we remove such rows
---8. In tolls_amount Column, we assume that there should be no negative values, we removing such rows
---9. In improvement_surcharge Column, we assume that there should not be any value other than 0.30, we remove such rows
---10. In total_amount Column, we assume that there should not be any negative values, we remove such rows

------------------------------------------
-- ORC Partitioned Table Creation for the nyc_yellow_taxi external table having tpep_pickup_datetime is in November and December 2017. 

-- Dropping table nyc_yellow_taxi_partition_orc if they exist
drop table nyc_yellow_taxi_partition_orc;

-- Creating nyc_yellow_taxi_partition_orc table
create external table if not exists nyc_yellow_taxi_partition_orc (
        vendorid int,
        tpep_pickup_datetime string,
        tpep_dropoff_datetime string,
        passenger_count int,
        trip_distance double,
        ratecodeid int,
        store_and_fwd_flag string ,
        pulocationid int,
        dolocationid int,
        payment_type int,
        fare_amount double,
        extra double,
        mta_tax double,     
        tip_amount double,
        tolls_amount double,
        improvement_surcharge double,
        total_amount double ) partitioned by (yr int, mnth int)
stored as orc location '/user/hive/warehouse/nyc_yellow_taxi_partition_orc'
tblproperties ("orc.compress"="SNAPPY");

SET hive.exec.max.dynamic.partitions=100000;
SET hive.exec.max.dynamic.partitions.pernode=100000;

-- Writing data from external table nyc_yellow_taxi to nyc_yellow_taxi_partition_orc
insert overwrite table nyc_yellow_taxi_partition_orc partition(yr, mnth)
select vendorid, tpep_pickup_datetime, tpep_dropoff_datetime, passenger_count, trip_distance,
ratecodeid, store_and_fwd_flag, pulocationid, dolocationid, payment_type, fare_amount, extra, mta_tax, 
tip_amount, tolls_amount, improvement_surcharge, total_amount,
year(tpep_pickup_datetime) as yr, month(tpep_pickup_datetime) as mnth
from nyc_yellow_taxi 
where passenger_count not in(0, 192) and trip_distance > 0 
and RateCodeID != 99 and fare_amount > 0 and extra >= 0 
and mta_tax in (0,0.5) and tip_amount >= 0
and tolls_amount >= 0 and improvement_surcharge = 0.30 
and total_amount >= 0 and year(tpep_pickup_datetime) = 2017 and month(tpep_pickup_datetime) in (11,12);

-- Running the query to check all of the records 
select * from nyc_yellow_taxi_partition_orc limit 10;

-- Checking total number of rows; 
select count(*) from nyc_yellow_taxi_partition_orc;
-- 1159745 total rows

-- Counting the rows in which any column has NULL values present

select count(*) as Total_NULL_records from nyc_yellow_taxi_partition_orc
where vendorid is null 
or tpep_pickup_datetime is null
or tpep_pickup_datetime is null
or passenger_count is null
or trip_distance is null
or ratecodeid is null
or store_and_fwd_flag is null
or pulocationid is null
or dolocationid is null
or payment_type is null
or fare_amount is null
or extra is null
or mta_tax is null
or tip_amount is null
or tolls_amount is null
or improvement_surcharge is null
or total_amount is null
or yr is null
or mnth is null;

-- No NULL values are present

-- 2. Analysis-I
----------------------------------
--1. Compare the overall average fare per trip for November and December.

select round(avg(fare_amount),2) as Avg_Fareamount, mnth as Month from nyc_yellow_taxi_partition_orc 
group by mnth;

-- Averager fare per trip for following months :
-- November - 13.06
-- December - 12.85

--2. Explore the â€˜number of passengers per tripâ€™ - how many trips are made by each level of â€˜Passenger_countâ€™? 
--Do most people travel solo or with other people?

select passenger_count, count(*) as no_of_trips from nyc_yellow_taxi_partition_orc 
group by passenger_count order by no_of_trips desc;

--	passenger_count		no_of_trips
--	1			821261
--	2			175841
--	5			54342
--	3			50452
--	6			33037
--	4			24809
--	7			3

-- From the above stats we can conclude that most of passengers prefer to travel Solo
-- Solo - 821261 - Highest


--3. Which is the most preferred mode of payment?

select payment_type, count(*) as no_of_transactions from nyc_yellow_taxi_partition_orc
group by payment_type order by no_of_transactions desc;

-- Credit Card is most preffered mode of payment with 782803 transactions
--	payment_type		no_of_transactions
--	Credit card(1)			782803
--	Cash(2)				370831
--	No charge(3)			4783
--	Dispute(4)			1328


--4. What is the average tip paid per trip? Compare the average tip with the 25th, 50th and 75th 
--percentiles and comment whether the â€˜average tipâ€™ is a representative statistic (of the central tendency) 
--of â€˜tip amount paidâ€™.

select round(avg(tip_amount),2) as avg_tip_per_trip,
percentile_approx(tip_amount, 0.25) as 25th_prcntil_avgamnt,  
percentile_approx(tip_amount, 0.50) as 50th_prcntil_avgamnt,
percentile_approx(tip_amount, 0.75) as 75th_prcntil_avgamnt
from nyc_yellow_taxi_partition_orc;

-- Above Statistics shows that the average tip paid per trip is not representative of central tendency 
-- Average Tip per trip - 1.85
-- 25th percentile of tip amomunt - 0
-- 50th percentile of tip amount - 1.36
-- 75th percentile of tip amount - 2.45

--5. Explore the â€˜Extraâ€™ (charge) variable - what fraction of total trips have an extra charge is levied?

select sub.extra_charge_group, sub.count/sum(sub.count) over () from (
select case
when extra = 0 then 'Extra Charge not Applied'
else 'Extra charge Applied' end as extra_charge_group,
count(1) as count
from nyc_yellow_taxi_partition_orc
group by 
case
when extra = 0 then 'Extra Charge not Applied'
else 'Extra charge Applied' end) sub;

-- Above Statistics show the following:
-- When Extra Charge Applied - 46.34 % of trips happened
-- and when Extra Charge not Applied - 53.66 % of trips happened, it means people like to travel more when no extra charges are levied

-- 3. Analysis-II
----------------------------------
--1. What is the correlation between the number of passengers on any given trip, and 
--the tip paid per trip? Do multiple travellers tip more compared to solo travellers?

select corr(passenger_count, tip_amount) as correlation
from nyc_yellow_taxi_partition_orc;

-- Correlation of -0.0049, that means there is no strong correlation between number of passengers and tip paid per trip, it is random in nature

--2. Segregate the data into five segments of â€˜tip paidâ€™: [0-5), [5-10), [10-15) , [15-20) and >=20. 
--Calculate the percentage share of each bucket (i.e. the fraction of trips falling in each bucket).

select tip_amnt_grp, concat(round(count(*) /cast(sum(count(*)) over() as float) *100,2),'%') as prcnt_of_total from
(
select case
when tip_amount < 5 then "Between 0 and 5"
when tip_amount >= 5 and tip_amount <10 then "Between 5 and 10"
when tip_amount >= 10 and tip_amount <15 then "Between 10 and 15"
when tip_amount >= 15 and tip_amount <20 then "Between 15 and 20"
else "Greater than or equal to 20" end as tip_amnt_grp 
from nyc_yellow_taxi_partition_orc
)sub
group by tip_amnt_grp order by tip_amnt_grp;

--1	fraction of trips Between 0 and 5			92.18%
--2	fraction of trips Between 10 and 15			1.85%
--3	fraction of trips Between 15 and 20			0.23%
--4	fraction of trips Between 5 and 10			5.66%
--5	fraction of trips Greater than or equal to 20		0.09%

--3. Which month has a greater average â€˜speedâ€™ - November or December? 
--Note that the variable â€˜speedâ€™ will have to be derived from other metrics.

SELECT mnth, 
AVG(trip_distance/((UNIX_TIMESTAMP(tpep_dropoff_datetime) - UNIX_TIMESTAMP(tpep_pickup_datetime))/3600)) as Avg_Speed_MPH
FROM nyc_yellow_taxi_partition_orc
WHERE trip_distance >= 0
GROUP BY mnth;

-- Average Speed for November and December is 10.997979210158933 Miles Per Hour & 11.094973245072287 Miles Per Hour respectively.

--4. Analyse the average speed of the most happening days of the year, i.e. 
--31st December (New yearâ€™s eve) and 25th December (Christmas) and compare it with the overall average.

-- Overall Average Speed
select
round(avg(trip_distance * 1609.344 / (unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))),2) as speed_overall
from nyc_yellow_taxi_partition_orc;

-- 4.94 Metre/Second

-- Average Speed on 31st dec
select
round(avg(trip_distance * 1609.344 / (unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))),2) as speed_new_year
from nyc_yellow_taxi_partition_orc 
where month(tpep_pickup_datetime) = 12 and day(tpep_pickup_datetime) = 31;

-- 5.92 Metre/Second

-- Average Speed on 25th dec
select
round(avg(trip_distance * 1609.344 / (unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime))),2) as speed_Christmas
from nyc_yellow_taxi_partition_orc 
where month(tpep_pickup_datetime) = 12 and day(tpep_pickup_datetime) = 25;

-- 6.82 Metre/Second
-- conclusion 
-- After analysis we can see that the Average Speed on 25th Dec and 31st Dec are higher than the overall average speed.